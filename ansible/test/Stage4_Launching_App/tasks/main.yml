---
- name:
  hosts: test-manager
  remote_user: ubuntu # define user account for ssh login
  serial: 1          # define the action will be done one by one
  gather_facts: yes
  tasks:
  - name: Check if "Swarm Mode" is enabled
    shell: docker info
    changed_when: False
    register: docker_info
    tags:
    - skip_ansible_lint # Suppressing the linter

  - name: Init "Swarm Mode" on the manager
    shell: docker swarm init > /home/ubuntu/swarm_init.cmd
    changed_when: False
    when: "docker_info.stdout.find('Swarm: active') == -1"

  - name: Retrieve the swarm command
    fetch:
      src: /home/ubuntu/swarm_init.cmd
      dest: /var/lib/jenkins/cluster/swarm_init.cmd
      flat: yes

- name:
  hosts: test-worker-1
  remote_user: ubuntu # define user account for ssh login
  serial: 1          # define the action will be done one by one
  gather_facts: yes
  tasks:
  - name: Check if "Swarm Mode" is enabled on the worker
    shell: docker info
    changed_when: False
    register: docker_info
    tags:
    - skip_ansible_lint # Suppressing the linter

  - name: Copy swarm init command to Test Server
    synchronize:
      delete: yes
      src: /var/lib/jenkins/cluster/swarm_init.cmd
      dest: /home/ubuntu/
    when: "docker_info.stdout.find('Swarm: active') == -1"

  - name: Joining the cluster
    shell: $(cat /home/ubuntu/swarm_init.cmd | grep "docker swarm join ")
    changed_when: False
    when: "docker_info.stdout.find('Swarm: active') == -1"


- name:
  hosts: test-manager
  remote_user: ubuntu # define user account for ssh login
  serial: 1          # define the action will be done one by one
  gather_facts: yes
  tasks:
  # - name:
  #   become: true
  #   shell: bash /home/ubuntu/Deploy-CNA/scripts/client.sh 5000

  # - name: Pulling the docker images
  #   shell: bash /home/ubuntu/Deploy-CNA/scripts/pull_images.sh

  - name: Building the docker images
    shell: cd /home/ubuntu/Deploy-CNA && docker-compose build

  # - name: Tagging the docker images
  #   shell: bash /home/ubuntu/Deploy-CNA/scripts/tag_images.sh

  - name: Deleting the docker services
    shell: cd /home/ubuntu/Deploy-CNA && sudo bash ./docker_services_rm.sh

  - name: Launching the application
    shell: cd /home/ubuntu/Deploy-CNA && sudo bash ./docker_services.sh
